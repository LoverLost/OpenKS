# -*- coding: utf-8 -*-
#
# Copyright 2022 HangZhou Hikvision Digital Technology Co., Ltd. All Right Reserved.
# Modified from rozemberczki2019gemsec "GEMSEC: Graph Embedding with Self Clustering"
# * author={Rozemberczki, Benedek and Davies, Ryan and Sarkar, Rik and Sutton, Charles}
# * booktitle={Proceedings of the 2019 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining 2019}
# * pages={65-72}
# * year={2019}
# * organization={ACM}
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


input_path: /testdata/abnormal_community_identify/data/relation_sample.csv  # the input path
node_info: /testdata/abnormal_community_identify/data/node_info.csv
embedding_output: /testdata/abnormal_community_identify/output/embeddings/relation_sample_embeddings.csv  # the output path for embedding result
cluster_mean_output: /testdata/abnormal_community_identify/output/cluster_means/relation_sample_means.csv   # the output path for cluster-means result
log_output: /testdata/abnormal_community_identify/output/logs/relation_sample_log.json  # the output path for log, saved as json file
assignment_output: /testdata/abnormal_community_identify/output/assignments/relation_sample_assign.json  # the output path for result, saved as json file
abnormal_group_score_output: /testdata/abnormal_community_identify/output/score/group_score.json

dump_matrices: True  # Save the embeddings to disk or not. Default is not.
model: 'GEMSECWithRegularization'  # The model type.GEMSECWithRegularization, GEMSEC, DeepWalkWithRegularization, DeepWalk

# RandomWalk parameters.
P: 1  # Return hyperparameter. Default is 1.
Q: 1  # In-out hyperparameter. Default is 1.
walker: 'first'  # Random walker order. Default is first.

# Skipgram parameters.
dimensions: 16  # Number of dimensions. Default is 16.
random_walk_length: 80  # Length of random walk per source. Default is 80.
num_of_walks: 5  # Number of random walks per source. Default is 5.
window_size: 5  # Window size for proximity statistic extraction. Default is 5.
distortion: 0.75  # Downsampling distortion. Default is 0.75.
negative_sample_number: 10  # Number of negative samples to draw. Default is 10.

# Optimization parameters.
initial_learning_rate: 0.01  # Initial learning rate. Default is 0.01.
minimal_learning_rate: 0.001  # Minimal learning rate. Default is 0.001.
annealing_factor: 1  # Annealing factor. Default is 1.0.
initial_gamma: 0.1  # Initial clustering weight. Default is 0.1.
lambd: 0.0625  # Smoothness regularization penalty. Default is 0.0625.
cluster_number: 20  # Number of clusters. Default is 20.
overlap_weighting: 'normalized_overlap'  # Weight construction technique for regularization.
regularization_noise: 1e-8  # Uniform noise max and min on the feature vector distance.